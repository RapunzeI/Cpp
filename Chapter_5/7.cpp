#include <iostream>
using namespace std;

class Stack {
	int p[10]; // 최대 10개의 정수 저장
	int tos; // 스택의 꼭대기를 가리키는 인덱스
public:
	Stack();
	bool push(int n); // 정수 n 푸시. 꽉 차 있으면 false, 아니면 true 리턴
	bool pop(int& n); // 팝하여 n에 저장. 스택이 비어 있으면 false, 아니면 true 리턴
};
Stack::Stack() {
	tos = 0;
}
bool Stack::push(int n) {
	if (tos >= 10) {
		return false;
	}
	else {
		p[tos] = n;
		tos++;
		return true;
	}
}
bool Stack::pop(int& n) {
	if (tos <= 0) {
		return false;
	}
	else {
		tos--;
		n = p[tos];
		return true;
	}
}

int main(void) {
	Stack a;
	for (int i = 0; i < 11; i++) {
		if (a.push(i)) cout << i << ' ';
		else cout << endl << i + 1 << " 번째 stack full" << endl;
	}
	int n;
	for (int i = 0; i < 11; i++) {
		if (a.pop(n))cout << n << ' ';
		else cout << endl << i + 1 << " 번째 stack empty";
	}
	cout << endl;
}